{
    "openapi": "3.0.0",
    "info": {
        "title": "Laravel OpenApi Demo Documentation",
        "description": "L5 Swagger OpenApi description",
        "contact": {
            "email": "admin@admin.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000api/v1",
            "description": "Local Host"
        },
        {
            "url": "https://dashboard.metanext.biz/api/v1",
            "description": "production"
        }
    ],
    "paths": {
        "/activation-code": {
            "get": {
                "tags": [
                    "ActivationCode"
                ],
                "summary": "get activationCodes list 11",
                "description": "Returns list of activationCodes",
                "operationId": "getActivationCodes",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ActivationCodeResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "tags": [
                    "ActivationCode"
                ],
                "summary": "Store new activationCode",
                "description": "Returns new activationCode data",
                "operationId": "storeActivationCode",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreActivationCodeRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ActivationCodeResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/activation-code/{id}": {
            "get": {
                "tags": [
                    "ActivationCode"
                ],
                "summary": "Get activationCode information",
                "description": "Returns activationCode data",
                "operationId": "getActivationCodeById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ActivationCode id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ActivationCodeResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "ActivationCode"
                ],
                "summary": "Update existing activationCode",
                "description": "Returns updated activationCode data",
                "operationId": "updateActivationCode",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ActivationCode id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateActivationCodeRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ActivationCodeResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "ActivationCode Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "ActivationCode"
                ],
                "summary": "Delete existing activationCode",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteActivationCode",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ActivationCode id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/area": {
            "get": {
                "tags": [
                    "Area"
                ],
                "summary": "get areas list",
                "description": "Returns list of areas",
                "operationId": "getAreas",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AreaResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "tags": [
                    "Area"
                ],
                "summary": "Store new area",
                "description": "Returns new area data",
                "operationId": "storeArea",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreAreaRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AreaResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/area/{id}": {
            "get": {
                "tags": [
                    "Area"
                ],
                "summary": "Get area information",
                "description": "Returns area data",
                "operationId": "getAreaById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Area id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AreaResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Area"
                ],
                "summary": "Update existing area",
                "description": "Returns updated area data",
                "operationId": "updateArea",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Area id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateAreaRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AreaResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Area Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Area"
                ],
                "summary": "Delete existing area",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteArea",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Area id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Register new user",
                "description": "Returns new user data",
                "operationId": "register",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegisterRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User registered successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/UserResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid input data"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Forbidden"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/confirm": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Confirm new user",
                "description": "Returns new user data",
                "operationId": "confirm",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ConfirmRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User registered successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "token": {
                                                    "type": "string",
                                                    "example": "some-jwt-token"
                                                },
                                                "user": {
                                                    "$ref": "#/components/schemas/UserResource"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/set-password": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Set user password",
                "description": "Returns user data",
                "operationId": "setPassword",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SetPasswordRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User authenticated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/UserResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Login user",
                "description": "Returns user data",
                "operationId": "login",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User authenticated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/UserResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/forget-password": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "operationId": "forgetPassword",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ForgetPasswordRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Verification code has been successfully sent"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/logout": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Logout user",
                "description": "Returns user data",
                "operationId": "logout",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You have successfully logged out"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/me": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Get user data",
                "description": "Returns user data",
                "operationId": "me",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User data retrieved successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/UserResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/banner": {
            "get": {
                "tags": [
                    "Banner"
                ],
                "summary": "get banners list",
                "description": "Returns list of banners",
                "operationId": "getBanners",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BannerResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "tags": [
                    "Banner"
                ],
                "summary": "Store new banner",
                "description": "Returns new banner data",
                "operationId": "storeBanner",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreBannerRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BannerResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/banner/{id}": {
            "get": {
                "tags": [
                    "Banner"
                ],
                "summary": "Get banner information",
                "description": "Returns banner data",
                "operationId": "getBannerById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Banner id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BannerResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Banner"
                ],
                "summary": "Update existing banner",
                "description": "Returns updated banner data",
                "operationId": "updateBanner",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Banner id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateBannerRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BannerResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Banner Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Banner"
                ],
                "summary": "Delete existing banner",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteBanner",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Banner id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/blog": {
            "get": {
                "tags": [
                    "Blog"
                ],
                "summary": "get blogs list",
                "description": "Returns list of blogs",
                "operationId": "getBlogs",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BlogResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "tags": [
                    "Blog"
                ],
                "summary": "Store new blog",
                "description": "Returns new blog data",
                "operationId": "storeBlog",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreBlogRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BlogResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/blog/{id}": {
            "get": {
                "tags": [
                    "Blog"
                ],
                "summary": "Get blog information",
                "description": "Returns blog data",
                "operationId": "getBlogById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Blog id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BlogResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Blog"
                ],
                "summary": "Update existing blog",
                "description": "Returns updated blog data",
                "operationId": "updateBlog",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Blog id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateBlogRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BlogResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Blog Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Blog"
                ],
                "summary": "Delete existing blog",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteBlog",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Blog id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/category": {
            "get": {
                "tags": [
                    "Category"
                ],
                "summary": "get categorys list",
                "description": "Returns list of categorys",
                "operationId": "getCategorys",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CategoryResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "tags": [
                    "Category"
                ],
                "summary": "Store new category",
                "description": "Returns new category data",
                "operationId": "storeCategory",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreCategoryRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CategoryResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/category/{id}": {
            "get": {
                "tags": [
                    "Category"
                ],
                "summary": "Get category information",
                "description": "Returns category data",
                "operationId": "getCategoryById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Category id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CategoryResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Category"
                ],
                "summary": "Update existing category",
                "description": "Returns updated category data",
                "operationId": "updateCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Category id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCategoryRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CategoryResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Category Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Category"
                ],
                "summary": "Delete existing category",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Category id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/city": {
            "get": {
                "tags": [
                    "City"
                ],
                "summary": "get citys list",
                "description": "Returns list of citys",
                "operationId": "getCitys",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CityResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "tags": [
                    "City"
                ],
                "summary": "Store new city",
                "description": "Returns new city data",
                "operationId": "storeCity",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreCityRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CityResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/city/{id}": {
            "get": {
                "tags": [
                    "City"
                ],
                "summary": "Get city information",
                "description": "Returns city data",
                "operationId": "getCityById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "City id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CityResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "City"
                ],
                "summary": "Update existing city",
                "description": "Returns updated city data",
                "operationId": "updateCity",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "City id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCityRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CityResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "City Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "City"
                ],
                "summary": "Delete existing city",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteCity",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "City id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/comment": {
            "get": {
                "tags": [
                    "Comment"
                ],
                "summary": "get comments list",
                "description": "Returns list of comments",
                "operationId": "getComments",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommentResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "tags": [
                    "Comment"
                ],
                "summary": "Store new comment",
                "description": "Returns new comment data",
                "operationId": "storeComment",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreCommentRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommentResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/comment/{id}": {
            "get": {
                "tags": [
                    "Comment"
                ],
                "summary": "Get comment information",
                "description": "Returns comment data",
                "operationId": "getCommentById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Comment id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommentResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Comment"
                ],
                "summary": "Update existing comment",
                "description": "Returns updated comment data",
                "operationId": "updateComment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Comment id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCommentRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommentResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Comment Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Comment"
                ],
                "summary": "Delete existing comment",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteComment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Comment id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/country": {
            "get": {
                "tags": [
                    "Country"
                ],
                "summary": "get countrys list",
                "description": "Returns list of countrys",
                "operationId": "getCountrys",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CountryResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "tags": [
                    "Country"
                ],
                "summary": "Store new country",
                "description": "Returns new country data",
                "operationId": "storeCountry",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreCountryRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CountryResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/country/{id}": {
            "get": {
                "tags": [
                    "Country"
                ],
                "summary": "Get country information",
                "description": "Returns country data",
                "operationId": "getCountryById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Country id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CountryResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Country"
                ],
                "summary": "Update existing country",
                "description": "Returns updated country data",
                "operationId": "updateCountry",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Country id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCountryRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CountryResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Country Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Country"
                ],
                "summary": "Delete existing country",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteCountry",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Country id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/dashboard/": {
            "get": {
                "tags": [
                    "Dashboard"
                ],
                "operationId": "dashboardIndex",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User data retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "tickets": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/TicketResource"
                                                    }
                                                },
                                                "services": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/ServiceResource"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/faq": {
            "get": {
                "tags": [
                    "Faq"
                ],
                "summary": "get faqs list",
                "description": "Returns list of faqs",
                "operationId": "getFaqs",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FaqResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "tags": [
                    "Faq"
                ],
                "summary": "Store new faq",
                "description": "Returns new faq data",
                "operationId": "storeFaq",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreFaqRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FaqResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/faq/{id}": {
            "get": {
                "tags": [
                    "Faq"
                ],
                "summary": "Get faq information",
                "description": "Returns faq data",
                "operationId": "getFaqById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Faq id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FaqResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Faq"
                ],
                "summary": "Update existing faq",
                "description": "Returns updated faq data",
                "operationId": "updateFaq",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Faq id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateFaqRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FaqResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Faq Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Faq"
                ],
                "summary": "Delete existing faq",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteFaq",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Faq id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/like": {
            "get": {
                "tags": [
                    "Like"
                ],
                "summary": "get likes list",
                "description": "Returns list of likes",
                "operationId": "getLikes",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LikeResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "tags": [
                    "Like"
                ],
                "summary": "Store new like",
                "description": "Returns new like data",
                "operationId": "storeLike",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreLikeRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LikeResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/like/{id}": {
            "get": {
                "tags": [
                    "Like"
                ],
                "summary": "Get like information",
                "description": "Returns like data",
                "operationId": "getLikeById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Like id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LikeResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Like"
                ],
                "summary": "Update existing like",
                "description": "Returns updated like data",
                "operationId": "updateLike",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Like id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateLikeRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LikeResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Like Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Like"
                ],
                "summary": "Delete existing like",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteLike",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Like id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/locality": {
            "get": {
                "tags": [
                    "Locality"
                ],
                "summary": "get localitys list",
                "description": "Returns list of localitys",
                "operationId": "getLocalitys",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LocalityResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "tags": [
                    "Locality"
                ],
                "summary": "Store new locality",
                "description": "Returns new locality data",
                "operationId": "storeLocality",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreLocalityRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LocalityResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/locality/{id}": {
            "get": {
                "tags": [
                    "Locality"
                ],
                "summary": "Get locality information",
                "description": "Returns locality data",
                "operationId": "getLocalityById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Locality id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LocalityResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Locality"
                ],
                "summary": "Update existing locality",
                "description": "Returns updated locality data",
                "operationId": "updateLocality",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Locality id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateLocalityRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LocalityResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Locality Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Locality"
                ],
                "summary": "Delete existing locality",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteLocality",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Locality id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/message/{ticket}": {
            "get": {
                "tags": [
                    "Message"
                ],
                "summary": "get messages list",
                "description": "Returns list of messages",
                "operationId": "getMessages",
                "parameters": [
                    {
                        "name": "ticket",
                        "in": "path",
                        "description": "ticket uuid",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "1"
                        }
                    },
                    {
                        "name": "page_limit",
                        "in": "query",
                        "description": "page limit",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "15"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "tags": [
                    "Message"
                ],
                "summary": "Store new message",
                "description": "Returns new message data",
                "operationId": "storeMessage",
                "parameters": [
                    {
                        "name": "ticket",
                        "in": "path",
                        "description": "ticket uuid",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreMessageRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/message/{id}": {
            "get": {
                "tags": [
                    "Message"
                ],
                "summary": "Get message information",
                "description": "Returns message data",
                "operationId": "getMessageById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Message id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Message"
                ],
                "summary": "Update existing message",
                "description": "Returns updated message data",
                "operationId": "updateMessage",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Message id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateMessageRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Message Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Message"
                ],
                "summary": "Delete existing message",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteMessage",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Message id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/module": {
            "get": {
                "tags": [
                    "Module"
                ],
                "summary": "get modules list",
                "description": "Returns list of modules",
                "operationId": "getModules",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ModuleResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "tags": [
                    "Module"
                ],
                "summary": "Store new module",
                "description": "Returns new module data",
                "operationId": "storeModule",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreModuleRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ModuleResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/module/{id}": {
            "get": {
                "tags": [
                    "Module"
                ],
                "summary": "Get module information",
                "description": "Returns module data",
                "operationId": "getModuleById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Module id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ModuleResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Module"
                ],
                "summary": "Update existing module",
                "description": "Returns updated module data",
                "operationId": "updateModule",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Module id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateModuleRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ModuleResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Module Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Module"
                ],
                "summary": "Delete existing module",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteModule",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Module id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/notice": {
            "get": {
                "tags": [
                    "Notice"
                ],
                "summary": "get notices list",
                "description": "Returns list of notices",
                "operationId": "getNotices",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NoticeResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "tags": [
                    "Notice"
                ],
                "summary": "Store new notice",
                "description": "Returns new notice data",
                "operationId": "storeNotice",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreNoticeRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NoticeResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/notice/{id}": {
            "get": {
                "tags": [
                    "Notice"
                ],
                "summary": "Get notice information",
                "description": "Returns notice data",
                "operationId": "getNoticeById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Notice id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NoticeResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Notice"
                ],
                "summary": "Update existing notice",
                "description": "Returns updated notice data",
                "operationId": "updateNotice",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Notice id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateNoticeRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NoticeResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Notice Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Notice"
                ],
                "summary": "Delete existing notice",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteNotice",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Notice id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/opinion": {
            "get": {
                "tags": [
                    "Opinion"
                ],
                "summary": "get opinions list",
                "description": "Returns list of opinions",
                "operationId": "getOpinions",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OpinionResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "tags": [
                    "Opinion"
                ],
                "summary": "Store new opinion",
                "description": "Returns new opinion data",
                "operationId": "storeOpinion",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreOpinionRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OpinionResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/opinion/{id}": {
            "get": {
                "tags": [
                    "Opinion"
                ],
                "summary": "Get opinion information",
                "description": "Returns opinion data",
                "operationId": "getOpinionById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Opinion id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OpinionResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Opinion"
                ],
                "summary": "Update existing opinion",
                "description": "Returns updated opinion data",
                "operationId": "updateOpinion",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Opinion id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateOpinionRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OpinionResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Opinion Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Opinion"
                ],
                "summary": "Delete existing opinion",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteOpinion",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Opinion id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/order": {
            "get": {
                "tags": [
                    "Order"
                ],
                "summary": "get orders list",
                "description": "Returns list of orders",
                "operationId": "getOrders",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "tags": [
                    "Order"
                ],
                "summary": "Store new order",
                "description": "Returns new order data",
                "operationId": "storeOrder",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreOrderRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/order/{id}": {
            "get": {
                "tags": [
                    "Order"
                ],
                "summary": "Get order information",
                "description": "Returns order data",
                "operationId": "getOrderById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Order id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Order"
                ],
                "summary": "Update existing order",
                "description": "Returns updated order data",
                "operationId": "updateOrder",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Order id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateOrderRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Order Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Order"
                ],
                "summary": "Delete existing order",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteOrder",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Order id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/order/start-test-period": {
            "post": {
                "tags": [
                    "Order"
                ],
                "summary": "enable test period from all service",
                "description": "every user can use one time in hole time",
                "operationId": "startTestPeriod",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreTestPeriodOrderRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/order-item": {
            "get": {
                "tags": [
                    "OrderItem"
                ],
                "summary": "get orderItems list",
                "description": "Returns list of orderItems",
                "operationId": "getOrderItems",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderItemResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "tags": [
                    "OrderItem"
                ],
                "summary": "Store new orderItem",
                "description": "Returns new orderItem data",
                "operationId": "storeOrderItem",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreOrderItemRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderItemResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/order-item/{id}": {
            "get": {
                "tags": [
                    "OrderItem"
                ],
                "summary": "Get orderItem information",
                "description": "Returns orderItem data",
                "operationId": "getOrderItemById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "OrderItem id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderItemResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "OrderItem"
                ],
                "summary": "Update existing orderItem",
                "description": "Returns updated orderItem data",
                "operationId": "updateOrderItem",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "OrderItem id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateOrderItemRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderItemResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "OrderItem Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "OrderItem"
                ],
                "summary": "Delete existing orderItem",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteOrderItem",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "OrderItem id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/plan": {
            "get": {
                "tags": [
                    "Plan"
                ],
                "summary": "get plans list",
                "description": "Returns list of plans",
                "operationId": "getPlans",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PlanResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "tags": [
                    "Plan"
                ],
                "summary": "Store new plan",
                "description": "Returns new plan data",
                "operationId": "storePlan",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StorePlanRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PlanResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/plan/{id}": {
            "get": {
                "tags": [
                    "Plan"
                ],
                "summary": "Get plan information",
                "description": "Returns plan data",
                "operationId": "getPlanById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Plan id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PlanResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Plan"
                ],
                "summary": "Update existing plan",
                "description": "Returns updated plan data",
                "operationId": "updatePlan",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Plan id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdatePlanRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PlanResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Plan Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Plan"
                ],
                "summary": "Delete existing plan",
                "description": "Deletes a record and returns no content",
                "operationId": "deletePlan",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Plan id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/plan-pricing": {
            "get": {
                "tags": [
                    "PlanPricing"
                ],
                "summary": "get planPricings list",
                "description": "Returns list of planPricings",
                "operationId": "getPlanPricings",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PlanPricingResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "tags": [
                    "PlanPricing"
                ],
                "summary": "Store new planPricing",
                "description": "Returns new planPricing data",
                "operationId": "storePlanPricing",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StorePlanPricingRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PlanPricingResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/plan-pricing/{id}": {
            "get": {
                "tags": [
                    "PlanPricing"
                ],
                "summary": "Get planPricing information",
                "description": "Returns planPricing data",
                "operationId": "getPlanPricingById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "PlanPricing id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PlanPricingResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "PlanPricing"
                ],
                "summary": "Update existing planPricing",
                "description": "Returns updated planPricing data",
                "operationId": "updatePlanPricing",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "PlanPricing id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdatePlanPricingRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PlanPricingResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "PlanPricing Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "PlanPricing"
                ],
                "summary": "Delete existing planPricing",
                "description": "Deletes a record and returns no content",
                "operationId": "deletePlanPricing",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "PlanPricing id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/profile": {
            "get": {
                "tags": [
                    "Profile"
                ],
                "summary": "get profiles list",
                "description": "Returns list of profiles",
                "operationId": "getProfiles",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProfileResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "tags": [
                    "Profile"
                ],
                "summary": "Store new profile",
                "description": "Returns new profile data",
                "operationId": "storeProfile",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreProfileRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProfileResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/profile/{id}": {
            "get": {
                "tags": [
                    "Profile"
                ],
                "summary": "Get profile information",
                "description": "Returns profile data",
                "operationId": "getProfileById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Profile id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProfileResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Profile"
                ],
                "summary": "Update existing profile",
                "description": "Returns updated profile data",
                "operationId": "updateProfile",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Profile id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateProfileRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProfileResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Profile Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Profile"
                ],
                "summary": "Delete existing profile",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteProfile",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Profile id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/province": {
            "get": {
                "tags": [
                    "Province"
                ],
                "summary": "get provinces list",
                "description": "Returns list of provinces",
                "operationId": "getProvinces",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProvinceResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "tags": [
                    "Province"
                ],
                "summary": "Store new province",
                "description": "Returns new province data",
                "operationId": "storeProvince",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreProvinceRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProvinceResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/province/{id}": {
            "get": {
                "tags": [
                    "Province"
                ],
                "summary": "Get province information",
                "description": "Returns province data",
                "operationId": "getProvinceById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Province id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProvinceResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Province"
                ],
                "summary": "Update existing province",
                "description": "Returns updated province data",
                "operationId": "updateProvince",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Province id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateProvinceRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProvinceResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Province Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Province"
                ],
                "summary": "Delete existing province",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteProvince",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Province id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/report": {
            "get": {
                "tags": [
                    "Report"
                ],
                "summary": "get reports list",
                "description": "Returns list of reports",
                "operationId": "getReports",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReportResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "tags": [
                    "Report"
                ],
                "summary": "Store new report",
                "description": "Returns new report data",
                "operationId": "storeReport",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreReportRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReportResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/report/{id}": {
            "get": {
                "tags": [
                    "Report"
                ],
                "summary": "Get report information",
                "description": "Returns report data",
                "operationId": "getReportById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Report id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReportResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Report"
                ],
                "summary": "Update existing report",
                "description": "Returns updated report data",
                "operationId": "updateReport",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Report id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateReportRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReportResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Report Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Report"
                ],
                "summary": "Delete existing report",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteReport",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Report id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/report-reason": {
            "get": {
                "tags": [
                    "ReportReason"
                ],
                "summary": "get reportReasons list",
                "description": "Returns list of reportReasons",
                "operationId": "getReportReasons",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReportReasonResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "tags": [
                    "ReportReason"
                ],
                "summary": "Store new reportReason",
                "description": "Returns new reportReason data",
                "operationId": "storeReportReason",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreReportReasonRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReportReasonResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/report-reason/{id}": {
            "get": {
                "tags": [
                    "ReportReason"
                ],
                "summary": "Get reportReason information",
                "description": "Returns reportReason data",
                "operationId": "getReportReasonById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ReportReason id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReportReasonResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "ReportReason"
                ],
                "summary": "Update existing reportReason",
                "description": "Returns updated reportReason data",
                "operationId": "updateReportReason",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ReportReason id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateReportReasonRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReportReasonResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "ReportReason Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "ReportReason"
                ],
                "summary": "Delete existing reportReason",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteReportReason",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ReportReason id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/server": {
            "get": {
                "tags": [
                    "Server"
                ],
                "summary": "get servers list",
                "description": "Returns list of servers",
                "operationId": "getServers",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": ""
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ServerResource"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "tags": [
                    "Server"
                ],
                "summary": "Store new server",
                "description": "Returns new server data",
                "operationId": "storeServer",
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Successful operation"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/ServerResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/server/{server}": {
            "get": {
                "tags": [
                    "Server"
                ],
                "summary": "Get server information",
                "description": "Returns server data",
                "operationId": "getServerById",
                "parameters": [
                    {
                        "name": "server",
                        "in": "path",
                        "description": "Server uuid",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": ""
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/ServerResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Server"
                ],
                "summary": "Update existing server",
                "description": "Returns updated server data",
                "operationId": "updateServer",
                "parameters": [
                    {
                        "name": "server",
                        "in": "path",
                        "description": "Server uuid",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateServerRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Successful operation"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/ServerResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Server Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Server"
                ],
                "summary": "Delete existing server",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteServer",
                "parameters": [
                    {
                        "name": "server",
                        "in": "path",
                        "description": "Server uuid",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/service": {
            "get": {
                "tags": [
                    "Service"
                ],
                "summary": "get services list",
                "description": "Returns list of services",
                "operationId": "getServices",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServiceResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "tags": [
                    "Service"
                ],
                "summary": "Store new service",
                "description": "Returns new service data",
                "operationId": "storeService",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreServiceRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServiceResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/service/{id}": {
            "get": {
                "tags": [
                    "Service"
                ],
                "summary": "Get service information",
                "description": "Returns service data",
                "operationId": "getServiceById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Service id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServiceResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Service"
                ],
                "summary": "Update existing service",
                "description": "Returns updated service data",
                "operationId": "updateService",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Service id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateServiceRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServiceResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Service Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Service"
                ],
                "summary": "Delete existing service",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteService",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Service id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/setting": {
            "get": {
                "tags": [
                    "Setting"
                ],
                "summary": "get settings list",
                "description": "Returns list of settings",
                "operationId": "getSettings",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SettingResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "tags": [
                    "Setting"
                ],
                "summary": "Store new setting",
                "description": "Returns new setting data",
                "operationId": "storeSetting",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreSettingRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SettingResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/setting/{id}": {
            "get": {
                "tags": [
                    "Setting"
                ],
                "summary": "Get setting information",
                "description": "Returns setting data",
                "operationId": "getSettingById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Setting id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SettingResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Setting"
                ],
                "summary": "Update existing setting",
                "description": "Returns updated setting data",
                "operationId": "updateSetting",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Setting id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateSettingRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SettingResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Setting Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Setting"
                ],
                "summary": "Delete existing setting",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteSetting",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Setting id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/subscription": {
            "get": {
                "tags": [
                    "Subscription"
                ],
                "summary": "get subscriptions list",
                "description": "Returns list of subscriptions",
                "operationId": "getSubscriptions",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubscriptionResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "tags": [
                    "Subscription"
                ],
                "summary": "Store new subscription",
                "description": "Returns new subscription data",
                "operationId": "storeSubscription",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreSubscriptionRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubscriptionResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/subscription/{id}": {
            "get": {
                "tags": [
                    "Subscription"
                ],
                "summary": "Get subscription information",
                "description": "Returns subscription data",
                "operationId": "getSubscriptionById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Subscription id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubscriptionResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Subscription"
                ],
                "summary": "Update existing subscription",
                "description": "Returns updated subscription data",
                "operationId": "updateSubscription",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Subscription id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateSubscriptionRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubscriptionResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Subscription Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Subscription"
                ],
                "summary": "Delete existing subscription",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteSubscription",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Subscription id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/ticket": {
            "get": {
                "tags": [
                    "Ticket"
                ],
                "summary": "get tickets list",
                "description": "Returns list of tickets",
                "operationId": "getTickets",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "1"
                        }
                    },
                    {
                        "name": "page_limit",
                        "in": "query",
                        "description": "page limit",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "15"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TicketResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "tags": [
                    "Ticket"
                ],
                "summary": "Store new ticket",
                "description": "Returns new ticket data",
                "operationId": "storeTicket",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [],
                                "type": "object",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/StoreTicketRequest"
                                    },
                                    {
                                        "properties": {
                                            "media": {
                                                "description": "Ticket attachment",
                                                "type": "string",
                                                "format": "binary"
                                            }
                                        },
                                        "type": "object"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Ticket registered successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/TicketResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/ticket/{ticket}": {
            "get": {
                "tags": [
                    "Ticket"
                ],
                "summary": "Get ticket information",
                "description": "Returns ticket data",
                "operationId": "getTicketById",
                "parameters": [
                    {
                        "name": "ticket",
                        "in": "path",
                        "description": "Ticket uuid",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TicketResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Ticket"
                ],
                "summary": "Update existing ticket",
                "description": "Returns updated ticket data",
                "operationId": "updateTicket",
                "parameters": [
                    {
                        "name": "ticket",
                        "in": "path",
                        "description": "Ticket uuid",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateTicketRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TicketResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Ticket Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Ticket"
                ],
                "summary": "Delete existing ticket",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteTicket",
                "parameters": [
                    {
                        "name": "ticket",
                        "in": "path",
                        "description": "Ticket uuid",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/ticket/data": {
            "get": {
                "tags": [
                    "Ticket"
                ],
                "summary": "get ticket store needed data",
                "description": "Returns ticket store needed data",
                "operationId": "getTicketData",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Ticket store successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "departments": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "value": {
                                                                "type": "string",
                                                                "example": "contact"
                                                            },
                                                            "label": {
                                                                "type": "string",
                                                                "example": "Contact"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "priorities": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "value": {
                                                                "type": "string",
                                                                "example": "low"
                                                            },
                                                            "label": {
                                                                "type": "string",
                                                                "example": "Low"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "statuses": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "value": {
                                                                "type": "string",
                                                                "example": "open"
                                                            },
                                                            "label": {
                                                                "type": "string",
                                                                "example": "Open"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/translation": {
            "get": {
                "tags": [
                    "Translation"
                ],
                "summary": "get translations list",
                "description": "Returns list of translations",
                "operationId": "getTranslations",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TranslationResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "tags": [
                    "Translation"
                ],
                "summary": "Store new translation",
                "description": "Returns new translation data",
                "operationId": "storeTranslation",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreTranslationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TranslationResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/translation/{id}": {
            "get": {
                "tags": [
                    "Translation"
                ],
                "summary": "Get translation information",
                "description": "Returns translation data",
                "operationId": "getTranslationById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Translation id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TranslationResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Translation"
                ],
                "summary": "Update existing translation",
                "description": "Returns updated translation data",
                "operationId": "updateTranslation",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Translation id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateTranslationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TranslationResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Translation Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Translation"
                ],
                "summary": "Delete existing translation",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteTranslation",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Translation id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/user": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "get users list",
                "description": "Returns list of users",
                "operationId": "getUsers",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Store new user",
                "description": "Returns new user data",
                "operationId": "storeUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreUserRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/user/{id}": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get user information",
                "description": "Returns user data",
                "operationId": "getUserById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Update existing user",
                "description": "Returns updated user data",
                "operationId": "updateUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateUserRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "User Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "User"
                ],
                "summary": "Delete existing user",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "ConfirmRequest": {
                "title": "Confirm request",
                "description": "Confirm user request body data",
                "required": [
                    "email",
                    "code"
                ],
                "properties": {
                    "email": {
                        "description": "user email",
                        "type": "string",
                        "example": "user@gmail.com"
                    },
                    "code": {
                        "description": "received code",
                        "type": "string",
                        "example": "1234"
                    }
                },
                "type": "object"
            },
            "ForgetPasswordRequest": {
                "title": "Forget Password Request",
                "description": "Login request body data",
                "required": [
                    "email"
                ],
                "properties": {
                    "email": {
                        "description": "user email",
                        "type": "string",
                        "example": "admin@gmail.com"
                    }
                },
                "type": "object"
            },
            "LoginRequest": {
                "title": "Login Request",
                "description": "Login request body data",
                "required": [
                    "email",
                    "password"
                ],
                "properties": {
                    "email": {
                        "description": "user email",
                        "type": "string",
                        "example": "admin@gmail.com"
                    },
                    "password": {
                        "type": "string",
                        "example": "password"
                    }
                },
                "type": "object"
            },
            "RegisterRequest": {
                "title": "Register request",
                "description": "Store user request body data",
                "required": [
                    "name",
                    "family",
                    "email",
                    "password"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "sajad"
                    },
                    "family": {
                        "type": "string",
                        "example": "eskandarian"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "user2@gmail.com"
                    },
                    "password": {
                        "type": "string",
                        "format": "password",
                        "example": "password123"
                    },
                    "password_confirmation": {
                        "type": "string",
                        "format": "password",
                        "example": "password123"
                    },
                    "terms": {
                        "description": "user confirm terms and policy",
                        "type": "boolean",
                        "example": "true"
                    }
                },
                "type": "object"
            },
            "SetPasswordRequest": {
                "title": "Login Request",
                "description": "Login request body data",
                "required": [
                    "password",
                    "password_confirmation"
                ],
                "properties": {
                    "password": {
                        "description": "new password",
                        "type": "string",
                        "example": "password"
                    },
                    "password_confirmation": {
                        "description": "password confirmation",
                        "type": "string",
                        "example": "password"
                    }
                },
                "type": "object"
            },
            "StoreActivationCodeRequest": {
                "title": "Store ActivationCode request",
                "description": "Store ActivationCode request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the new activationCode",
                        "type": "string",
                        "example": ""
                    }
                },
                "type": "object"
            },
            "StoreAreaRequest": {
                "title": "Store Area request",
                "description": "Store Area request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the new area",
                        "type": "string",
                        "example": ""
                    }
                },
                "type": "object"
            },
            "StoreBannerRequest": {
                "title": "Store Banner request",
                "description": "Store Banner request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the new banner",
                        "type": "string",
                        "example": ""
                    }
                },
                "type": "object"
            },
            "StoreBlogRequest": {
                "title": "Store Blog request",
                "description": "Store Blog request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the new blog",
                        "type": "string",
                        "example": ""
                    }
                },
                "type": "object"
            },
            "StoreCategoryRequest": {
                "title": "Store Category request",
                "description": "Store Category request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the new category",
                        "type": "string",
                        "example": ""
                    }
                },
                "type": "object"
            },
            "StoreCityRequest": {
                "title": "Store City request",
                "description": "Store City request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the new city",
                        "type": "string",
                        "example": ""
                    }
                },
                "type": "object"
            },
            "StoreCommentRequest": {
                "title": "Store Comment request",
                "description": "Store Comment request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the new comment",
                        "type": "string",
                        "example": ""
                    }
                },
                "type": "object"
            },
            "StoreCountryRequest": {
                "title": "Store Country request",
                "description": "Store Country request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the new country",
                        "type": "string",
                        "example": ""
                    }
                },
                "type": "object"
            },
            "StoreFaqRequest": {
                "title": "Store Faq request",
                "description": "Store Faq request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the new faq",
                        "type": "string",
                        "example": ""
                    }
                },
                "type": "object"
            },
            "StoreLikeRequest": {
                "title": "Store Like request",
                "description": "Store Like request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the new like",
                        "type": "string",
                        "example": ""
                    }
                },
                "type": "object"
            },
            "StoreLocalityRequest": {
                "title": "Store Locality request",
                "description": "Store Locality request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the new locality",
                        "type": "string",
                        "example": ""
                    }
                },
                "type": "object"
            },
            "StoreMessageRequest": {
                "title": "Store Message request",
                "description": "Store Message request body data",
                "required": [
                    "message"
                ],
                "properties": {
                    "message": {
                        "type": "string",
                        "example": "This is a message"
                    },
                    "media": {
                        "type": "file",
                        "example": "file"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "StoreMessageRequest"
                }
            },
            "StoreModuleRequest": {
                "title": "Store Module request",
                "description": "Store Module request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the new module",
                        "type": "string",
                        "example": ""
                    }
                },
                "type": "object"
            },
            "StoreNoticeRequest": {
                "title": "Store Notice request",
                "description": "Store Notice request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the new notice",
                        "type": "string",
                        "example": ""
                    }
                },
                "type": "object"
            },
            "StoreOpinionRequest": {
                "title": "Store Opinion request",
                "description": "Store Opinion request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the new opinion",
                        "type": "string",
                        "example": ""
                    }
                },
                "type": "object"
            },
            "StoreOrderItemRequest": {
                "title": "Store OrderItem request",
                "description": "Store OrderItem request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the new orderItem",
                        "type": "string",
                        "example": ""
                    }
                },
                "type": "object"
            },
            "StoreOrderRequest": {
                "title": "Store Order request",
                "description": "Store Order request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the new order",
                        "type": "string",
                        "example": ""
                    }
                },
                "type": "object"
            },
            "StorePlanPricingRequest": {
                "title": "Store PlanPricing request",
                "description": "Store PlanPricing request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the new planPricing",
                        "type": "string",
                        "example": ""
                    }
                },
                "type": "object"
            },
            "StorePlanRequest": {
                "title": "Store Plan request",
                "description": "Store Plan request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the new plan",
                        "type": "string",
                        "example": ""
                    }
                },
                "type": "object"
            },
            "StoreProfileRequest": {
                "title": "Store Profile request",
                "description": "Store Profile request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the new profile",
                        "type": "string",
                        "example": ""
                    }
                },
                "type": "object"
            },
            "StoreProvinceRequest": {
                "title": "Store Province request",
                "description": "Store Province request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the new province",
                        "type": "string",
                        "example": ""
                    }
                },
                "type": "object"
            },
            "StoreReportReasonRequest": {
                "title": "Store ReportReason request",
                "description": "Store ReportReason request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the new reportReason",
                        "type": "string",
                        "example": ""
                    }
                },
                "type": "object"
            },
            "StoreReportRequest": {
                "title": "Store Report request",
                "description": "Store Report request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the new report",
                        "type": "string",
                        "example": ""
                    }
                },
                "type": "object"
            },
            "StoreServerRequest": {
                "title": "Store Server request",
                "description": "Store Server request body data",
                "required": [
                    "name"
                ],
                "type": "object"
            },
            "StoreServiceRequest": {
                "title": "Store Service request",
                "description": "Store Service request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the new service",
                        "type": "string",
                        "example": ""
                    }
                },
                "type": "object"
            },
            "StoreSettingRequest": {
                "title": "Store Setting request",
                "description": "Store Setting request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the new setting",
                        "type": "string",
                        "example": ""
                    }
                },
                "type": "object"
            },
            "StoreSubscriptionRequest": {
                "title": "Store Subscription request",
                "description": "Store Subscription request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the new subscription",
                        "type": "string",
                        "example": ""
                    }
                },
                "type": "object"
            },
            "StoreTestPeriodOrderRequest": {
                "title": "start test period request",
                "description": "start test period request",
                "required": [
                    "name"
                ],
                "properties": {
                    "domain_name": {
                        "description": "domain name",
                        "type": "string",
                        "example": "metanext"
                    }
                },
                "type": "object"
            },
            "StoreTicketRequest": {
                "title": "Store Ticket request",
                "description": "Store Ticket request body data",
                "required": [
                    "subject",
                    "description",
                    "department",
                    "priority"
                ],
                "properties": {
                    "name": {
                        "description": "when user not authorised",
                        "type": "string",
                        "example": "John"
                    },
                    "family": {
                        "description": "when user not authorised",
                        "type": "string",
                        "example": "Doe"
                    },
                    "mobile": {
                        "description": "when user not authorised",
                        "type": "string",
                        "example": "09123456789"
                    },
                    "subject": {
                        "type": "string",
                        "example": "This is a ticket subject"
                    },
                    "description": {
                        "type": "string",
                        "example": "This is a ticket description"
                    },
                    "department": {
                        "description": "TicketDepartmentEnum::class",
                        "type": "string",
                        "enum": [
                            "contact",
                            "sell"
                        ],
                        "example": "contact"
                    },
                    "status": {
                        "description": "TicketStatusEnum::class",
                        "type": "string",
                        "enum": [
                            "open",
                            "close"
                        ],
                        "example": "open"
                    },
                    "priority": {
                        "description": "TicketPriorityEnum::class",
                        "type": "string",
                        "enum": [
                            "low",
                            "normal",
                            "high"
                        ],
                        "example": "low"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "StoreTicketRequest"
                }
            },
            "StoreTranslationRequest": {
                "title": "Store Translation request",
                "description": "Store Translation request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the new translation",
                        "type": "string",
                        "example": ""
                    }
                },
                "type": "object"
            },
            "StoreUserRequest": {
                "title": "Store User request",
                "description": "Store User request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the new user",
                        "type": "string",
                        "example": ""
                    }
                },
                "type": "object"
            },
            "UpdateActivationCodeRequest": {
                "title": "Update ActivationCode request",
                "description": "Update ActivationCode request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the updated activationCode",
                        "type": "string",
                        "example": ""
                    }
                },
                "type": "object"
            },
            "UpdateAreaRequest": {
                "title": "Update Area request",
                "description": "Update Area request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the updated area",
                        "type": "string",
                        "example": ""
                    }
                },
                "type": "object"
            },
            "UpdateBannerRequest": {
                "title": "Update Banner request",
                "description": "Update Banner request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the updated banner",
                        "type": "string",
                        "example": ""
                    }
                },
                "type": "object"
            },
            "UpdateBlogRequest": {
                "title": "Update Blog request",
                "description": "Update Blog request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the updated blog",
                        "type": "string",
                        "example": ""
                    }
                },
                "type": "object"
            },
            "UpdateCategoryRequest": {
                "title": "Update Category request",
                "description": "Update Category request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the updated category",
                        "type": "string",
                        "example": ""
                    }
                },
                "type": "object"
            },
            "UpdateCityRequest": {
                "title": "Update City request",
                "description": "Update City request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the updated city",
                        "type": "string",
                        "example": ""
                    }
                },
                "type": "object"
            },
            "UpdateCommentRequest": {
                "title": "Update Comment request",
                "description": "Update Comment request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the updated comment",
                        "type": "string",
                        "example": ""
                    }
                },
                "type": "object"
            },
            "UpdateCountryRequest": {
                "title": "Update Country request",
                "description": "Update Country request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the updated country",
                        "type": "string",
                        "example": ""
                    }
                },
                "type": "object"
            },
            "UpdateFaqRequest": {
                "title": "Update Faq request",
                "description": "Update Faq request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the updated faq",
                        "type": "string",
                        "example": ""
                    }
                },
                "type": "object"
            },
            "UpdateLikeRequest": {
                "title": "Update Like request",
                "description": "Update Like request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the updated like",
                        "type": "string",
                        "example": ""
                    }
                },
                "type": "object"
            },
            "UpdateLocalityRequest": {
                "title": "Update Locality request",
                "description": "Update Locality request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the updated locality",
                        "type": "string",
                        "example": ""
                    }
                },
                "type": "object"
            },
            "UpdateMessageRequest": {
                "title": "Update Message request",
                "description": "Update Message request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the updated message",
                        "type": "string",
                        "example": ""
                    }
                },
                "type": "object"
            },
            "UpdateModuleRequest": {
                "title": "Update Module request",
                "description": "Update Module request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the updated module",
                        "type": "string",
                        "example": ""
                    }
                },
                "type": "object"
            },
            "UpdateNoticeRequest": {
                "title": "Update Notice request",
                "description": "Update Notice request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the updated notice",
                        "type": "string",
                        "example": ""
                    }
                },
                "type": "object"
            },
            "UpdateOpinionRequest": {
                "title": "Update Opinion request",
                "description": "Update Opinion request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the updated opinion",
                        "type": "string",
                        "example": ""
                    }
                },
                "type": "object"
            },
            "UpdateOrderItemRequest": {
                "title": "Update OrderItem request",
                "description": "Update OrderItem request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the updated orderItem",
                        "type": "string",
                        "example": ""
                    }
                },
                "type": "object"
            },
            "UpdateOrderRequest": {
                "title": "Update Order request",
                "description": "Update Order request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the updated order",
                        "type": "string",
                        "example": ""
                    }
                },
                "type": "object"
            },
            "UpdatePlanPricingRequest": {
                "title": "Update PlanPricing request",
                "description": "Update PlanPricing request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the updated planPricing",
                        "type": "string",
                        "example": ""
                    }
                },
                "type": "object"
            },
            "UpdatePlanRequest": {
                "title": "Update Plan request",
                "description": "Update Plan request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the updated plan",
                        "type": "string",
                        "example": ""
                    }
                },
                "type": "object"
            },
            "UpdateProfileRequest": {
                "title": "Update Profile request",
                "description": "Update Profile request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the updated profile",
                        "type": "string",
                        "example": ""
                    }
                },
                "type": "object"
            },
            "UpdateProvinceRequest": {
                "title": "Update Province request",
                "description": "Update Province request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the updated province",
                        "type": "string",
                        "example": ""
                    }
                },
                "type": "object"
            },
            "UpdateReportReasonRequest": {
                "title": "Update ReportReason request",
                "description": "Update ReportReason request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the updated reportReason",
                        "type": "string",
                        "example": ""
                    }
                },
                "type": "object"
            },
            "UpdateReportRequest": {
                "title": "Update Report request",
                "description": "Update Report request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the updated report",
                        "type": "string",
                        "example": ""
                    }
                },
                "type": "object"
            },
            "UpdateServerRequest": {
                "title": "Update Server request",
                "description": "Update Server request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the updated server",
                        "type": "string",
                        "example": ""
                    }
                },
                "type": "object"
            },
            "UpdateServiceRequest": {
                "title": "Update Service request",
                "description": "Update Service request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the updated service",
                        "type": "string",
                        "example": ""
                    }
                },
                "type": "object"
            },
            "UpdateSettingRequest": {
                "title": "Update Setting request",
                "description": "Update Setting request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the updated setting",
                        "type": "string",
                        "example": ""
                    }
                },
                "type": "object"
            },
            "UpdateSubscriptionRequest": {
                "title": "Update Subscription request",
                "description": "Update Subscription request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the updated subscription",
                        "type": "string",
                        "example": ""
                    }
                },
                "type": "object"
            },
            "UpdateTicketRequest": {
                "title": "Update Ticket request",
                "description": "Update Ticket request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the updated ticket",
                        "type": "string",
                        "example": ""
                    }
                },
                "type": "object"
            },
            "UpdateTranslationRequest": {
                "title": "Update Translation request",
                "description": "Update Translation request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the updated translation",
                        "type": "string",
                        "example": ""
                    }
                },
                "type": "object"
            },
            "UpdateUserRequest": {
                "title": "Update User request",
                "description": "Update User request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the updated user",
                        "type": "string",
                        "example": ""
                    }
                },
                "type": "object"
            },
            "ActivationCodeResource": {
                "title": "ActivationCodeResource",
                "description": "ActivationCode resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ActivationCode"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "ActivationCodeResource"
                }
            },
            "AreaResource": {
                "title": "AreaResource",
                "description": "Area resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Area"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "AreaResource"
                }
            },
            "BannerResource": {
                "title": "BannerResource",
                "description": "Banner resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Banner"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "BannerResource"
                }
            },
            "BlogResource": {
                "title": "BlogResource",
                "description": "Blog resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Blog"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "BlogResource"
                }
            },
            "CategoryResource": {
                "title": "CategoryResource",
                "description": "Category resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Category"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "CategoryResource"
                }
            },
            "CityResource": {
                "title": "CityResource",
                "description": "City resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/City"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "CityResource"
                }
            },
            "CommentResource": {
                "title": "CommentResource",
                "description": "Comment resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Comment"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "CommentResource"
                }
            },
            "CountryResource": {
                "title": "CountryResource",
                "description": "Country resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Country"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "CountryResource"
                }
            },
            "FaqResource": {
                "title": "FaqResource",
                "description": "Faq resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Faq"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "FaqResource"
                }
            },
            "LikeResource": {
                "title": "LikeResource",
                "description": "Like resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Like"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "LikeResource"
                }
            },
            "LocalityResource": {
                "title": "LocalityResource",
                "description": "Locality resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Locality"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "LocalityResource"
                }
            },
            "MediaResource": {
                "title": "MediaResource",
                "description": "Media resource",
                "properties": {
                    "uuid": {
                        "type": "string",
                        "example": "123e4567-e89b-12d3-a456-426614174000"
                    },
                    "name": {
                        "type": "string",
                        "example": "This is a media name"
                    },
                    "mime_type": {
                        "type": "string",
                        "example": "image/jpeg"
                    },
                    "size": {
                        "type": "integer",
                        "example": "1024"
                    },
                    "order_column": {
                        "type": "integer",
                        "example": "1"
                    },
                    "original_url": {
                        "type": "string",
                        "example": "http://example.com/image.jpg"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "MediaResource"
                }
            },
            "MessageResource": {
                "title": "MessageResource",
                "description": "Message resource",
                "properties": {
                    "uuid": {
                        "type": "string",
                        "example": "123e4567-e89b-12d3-a456-426614174000"
                    },
                    "user_id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "message": {
                        "type": "string",
                        "example": "This is a message"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2021-09-01 00:00:00"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2021-09-01 00:00:00"
                    },
                    "user": {
                        "$ref": "#/components/schemas/UserResource"
                    },
                    "media": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MediaResource"
                        },
                        "nullable": true
                    }
                },
                "type": "object",
                "xml": {
                    "name": "MessageResource"
                }
            },
            "ModuleResource": {
                "title": "ModuleResource",
                "description": "Module resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Module"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "ModuleResource"
                }
            },
            "NoticeResource": {
                "title": "NoticeResource",
                "description": "Notice resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Notice"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "NoticeResource"
                }
            },
            "OpinionResource": {
                "title": "OpinionResource",
                "description": "Opinion resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Opinion"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "OpinionResource"
                }
            },
            "OrderItemResource": {
                "title": "OrderItemResource",
                "description": "OrderItem resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrderItem"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "OrderItemResource"
                }
            },
            "OrderResource": {
                "title": "OrderResource",
                "description": "Order resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Order"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "OrderResource"
                }
            },
            "PlanPricingResource": {
                "title": "PlanPricingResource",
                "description": "PlanPricing resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PlanPricing"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "PlanPricingResource"
                }
            },
            "PlanResource": {
                "title": "PlanResource",
                "description": "Plan resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Plan"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "PlanResource"
                }
            },
            "ProfileResource": {
                "title": "ProfileResource",
                "description": "Profile resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Profile"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "ProfileResource"
                }
            },
            "ProvinceResource": {
                "title": "ProvinceResource",
                "description": "Province resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Province"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "ProvinceResource"
                }
            },
            "ReportReasonResource": {
                "title": "ReportReasonResource",
                "description": "ReportReason resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ReportReason"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "ReportReasonResource"
                }
            },
            "ReportResource": {
                "title": "ReportResource",
                "description": "Report resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Report"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "ReportResource"
                }
            },
            "ServerResource": {
                "title": "ServerResource",
                "description": "Server resource",
                "properties": {
                    "id": {
                        "description": "ID",
                        "type": "integer",
                        "example": "1"
                    },
                    "uuid": {
                        "description": "UUID of the server",
                        "type": "string",
                        "example": "123e4567-e89b-12d3-a456-426614174000"
                    },
                    "user": {
                        "$ref": "#/components/schemas/UserResource"
                    },
                    "order": {
                        "$ref": "#/components/schemas/OrderResource"
                    },
                    "website_url": {
                        "description": "Website URL",
                        "type": "string",
                        "example": "https://example.com"
                    },
                    "domain_name": {
                        "description": "Domain name",
                        "type": "string",
                        "example": "example.com"
                    },
                    "ip_address": {
                        "description": "IP address",
                        "type": "string",
                        "example": "192.168.1.1"
                    },
                    "has_ssl": {
                        "description": "Has SSL",
                        "type": "boolean",
                        "example": "true"
                    },
                    "has_backup": {
                        "description": "Has backup",
                        "type": "boolean",
                        "example": "true"
                    },
                    "backup_frequency": {
                        "description": "Backup frequency",
                        "type": "string",
                        "example": "daily"
                    },
                    "has_application": {
                        "description": "Has application",
                        "type": "boolean",
                        "example": "true"
                    },
                    "has_website": {
                        "description": "Has website",
                        "type": "boolean",
                        "example": "true"
                    },
                    "application_updated_at": {
                        "description": "Application updated at",
                        "type": "string",
                        "example": "2023-10-04 23:29:29"
                    },
                    "source_code_updated_at": {
                        "description": "Source code updated at",
                        "type": "string",
                        "example": "2023-10-04 23:29:29"
                    },
                    "is_active": {
                        "description": "Is active",
                        "type": "boolean",
                        "example": "true"
                    },
                    "expired_at": {
                        "description": "Expired at",
                        "type": "string",
                        "example": "2023-10-04 23:29:29"
                    },
                    "deleted_at": {
                        "description": "Deleted at",
                        "type": "string",
                        "example": "2023-10-04 23:29:29"
                    },
                    "created_at": {
                        "description": "Created at",
                        "type": "string",
                        "example": "2023-10-04 23:29:29"
                    },
                    "updated_at": {
                        "description": "Updated at",
                        "type": "string",
                        "example": "2023-10-04 23:29:29"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "ServerResource"
                }
            },
            "ServiceResource": {
                "title": "ServiceResource",
                "description": "Service resource",
                "properties": {
                    "uuid": {
                        "title": "uuid",
                        "description": "uuid",
                        "type": "string",
                        "example": "123e4567-e89b-12d3-a456-426614174000"
                    },
                    "key": {
                        "title": "key",
                        "description": "key",
                        "type": "string",
                        "example": "service"
                    },
                    "title": {
                        "title": "title",
                        "description": "title",
                        "type": "string",
                        "example": "Service title"
                    },
                    "description": {
                        "title": "description",
                        "description": "description",
                        "type": "string",
                        "example": "Service description"
                    },
                    "image": {
                        "title": "image",
                        "description": "image",
                        "type": "string",
                        "example": "https://example.com/image.jpg"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "ServiceResource"
                }
            },
            "SettingResource": {
                "title": "SettingResource",
                "description": "Setting resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Setting"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "SettingResource"
                }
            },
            "SubscriptionResource": {
                "title": "SubscriptionResource",
                "description": "Subscription resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Subscription"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "SubscriptionResource"
                }
            },
            "TicketResource": {
                "title": "TicketResource",
                "description": "Ticket resource",
                "properties": {
                    "uuid": {
                        "type": "string",
                        "example": "123e4567-e89b-12d3-a456-426614174000"
                    },
                    "subject": {
                        "type": "string",
                        "example": "This is a ticket subject"
                    },
                    "description": {
                        "type": "string",
                        "example": "This is a ticket description"
                    },
                    "department": {
                        "type": "string",
                        "example": "contact"
                    },
                    "closed_by": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "status": {
                        "type": "string",
                        "example": "open"
                    },
                    "key": {
                        "type": "string",
                        "example": "TICKET-1"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2021-09-01 00:00:00"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2021-09-01 00:00:00"
                    },
                    "priority": {
                        "type": "string",
                        "example": "low"
                    },
                    "messages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MessageResource"
                        },
                        "nullable": true
                    },
                    "last_message": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/MessageResource"
                            }
                        ],
                        "nullable": true
                    },
                    "user": {
                        "$ref": "#/components/schemas/UserResource"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "TicketResource"
                }
            },
            "TranslationResource": {
                "title": "TranslationResource",
                "description": "Translation resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Translation"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "TranslationResource"
                }
            },
            "UserResource": {
                "title": "UserResource",
                "description": "User resource",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "sajad"
                    },
                    "family": {
                        "type": "string",
                        "example": "eskandarian"
                    }
                },
                "type": "object"
            },
            "ActivationCode": {
                "title": "ActivationCode",
                "description": "ActivationCode model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    }
                },
                "type": "object",
                "xml": {
                    "name": "ActivationCode"
                }
            },
            "Area": {
                "title": "Area",
                "description": "Area model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Area"
                }
            },
            "Banner": {
                "title": "Banner",
                "description": "Banner model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Banner"
                }
            },
            "Blog": {
                "title": "Blog",
                "description": "Blog model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Blog"
                }
            },
            "Category": {
                "title": "Category",
                "description": "Category model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Category"
                }
            },
            "City": {
                "title": "City",
                "description": "City model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    }
                },
                "type": "object",
                "xml": {
                    "name": "City"
                }
            },
            "Comment": {
                "title": "Comment",
                "description": "Comment model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Comment"
                }
            },
            "Country": {
                "title": "Country",
                "description": "Country model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Country"
                }
            },
            "Faq": {
                "title": "Faq",
                "description": "Faq model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Faq"
                }
            },
            "Like": {
                "title": "Like",
                "description": "Like model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Like"
                }
            },
            "Locality": {
                "title": "Locality",
                "description": "Locality model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Locality"
                }
            },
            "Message": {
                "title": "Message",
                "description": "Message model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "uuid": {
                        "type": "string",
                        "readOnly": "true",
                        "example": "123e4567-e89b-12d3-a456-426614174000"
                    },
                    "ticket_id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "user_id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "message": {
                        "type": "string",
                        "example": "This is a message"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Message"
                }
            },
            "Module": {
                "title": "Module",
                "description": "Module model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "uuid": {
                        "title": "uuid",
                        "description": "uuid",
                        "type": "string",
                        "example": "123e4567-e89b-12d3-a456-426614174000"
                    },
                    "key": {
                        "title": "key",
                        "description": "key",
                        "type": "string",
                        "example": "key1"
                    },
                    "languages": {
                        "title": "languages",
                        "description": "languages",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "fa",
                            "en"
                        ]
                    },
                    "is_public": {
                        "title": "is_public",
                        "description": "is_public",
                        "type": "boolean",
                        "example": true
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Module"
                }
            },
            "Notice": {
                "title": "Notice",
                "description": "Notice model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Notice"
                }
            },
            "Opinion": {
                "title": "Opinion",
                "description": "Opinion model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Opinion"
                }
            },
            "Order": {
                "title": "Order",
                "description": "Order model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "user_id": {
                        "title": "user_id",
                        "description": "user_id",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "total_price": {
                        "title": "total_price",
                        "description": "total_price",
                        "type": "integer",
                        "format": "int64",
                        "example": 100000
                    },
                    "note": {
                        "title": "note",
                        "description": "note",
                        "type": "string",
                        "example": "This is a note"
                    },
                    "status": {
                        "title": "status",
                        "description": "some value from OrderStatusEnum",
                        "type": "string",
                        "example": "pending"
                    },
                    "expired_at": {
                        "title": "expired_at",
                        "description": "expired_at",
                        "type": "string",
                        "example": "2022-04-06 08:14:40"
                    },
                    "canceled_by": {
                        "title": "canceled_by",
                        "description": "canceled_by",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "canceled_at": {
                        "title": "canceled_at",
                        "description": "canceled_at",
                        "type": "string",
                        "example": "2022-04-06 08:14:40"
                    },
                    "paid_at": {
                        "title": "paid_at",
                        "description": "paid_at",
                        "type": "string",
                        "example": "2022-04-06 08:14:40"
                    },
                    "paid_by": {
                        "title": "paid_by",
                        "description": "paid_by",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "payment_method": {
                        "title": "payment_method",
                        "description": "payment_method",
                        "type": "string",
                        "example": "Bank Transfer"
                    },
                    "order_number": {
                        "title": "order_number",
                        "description": "order_number",
                        "type": "string",
                        "example": "ORD0000000001"
                    },
                    "repeatable": {
                        "title": "repeatable",
                        "description": "repeatable",
                        "type": "boolean",
                        "example": false
                    },
                    "extra_attributes": {
                        "title": "extra_attributes",
                        "description": "extra_attributes",
                        "type": "object"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Order"
                }
            },
            "OrderItem": {
                "title": "OrderItem",
                "description": "OrderItem model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "order_id": {
                        "title": "order_id",
                        "description": "order_id",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "orderable_type": {
                        "title": "orderable_type",
                        "description": "orderable_type",
                        "type": "string",
                        "example": "App\\Models\\Plan"
                    },
                    "orderable_id": {
                        "title": "orderable_id",
                        "description": "orderable_id",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "price": {
                        "title": "price",
                        "description": "price",
                        "type": "integer",
                        "format": "int64",
                        "example": 100000
                    },
                    "month": {
                        "title": "month",
                        "description": "month",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "type": {
                        "title": "type",
                        "description": "some value from PlanTypeEnum",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "extra_attributes": {
                        "title": "extra_attributes",
                        "description": "extra_attributes",
                        "type": "object"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "OrderItem"
                }
            },
            "Plan": {
                "title": "Plan",
                "description": "Plan model",
                "properties": {
                    "planable_id": {
                        "title": "planable id",
                        "description": "reference to planable",
                        "type": "integer",
                        "example": "1"
                    },
                    "planable_type": {
                        "title": "planable type",
                        "description": "reference to planable",
                        "type": "string",
                        "example": "App\\Models\\Service"
                    },
                    "limit": {
                        "title": "limit",
                        "description": "limit",
                        "type": "integer",
                        "example": "1"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Plan"
                }
            },
            "PlanPricing": {
                "title": "PlanPricing",
                "description": "PlanPricing model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "plan_id": {
                        "title": "plan_id",
                        "description": "plan_id",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "price": {
                        "title": "price",
                        "description": "price",
                        "type": "integer",
                        "format": "int64",
                        "example": 100000
                    },
                    "price_special": {
                        "title": "price_special",
                        "description": "price_special",
                        "type": "integer",
                        "format": "int64",
                        "example": 80000
                    },
                    "month": {
                        "title": "month",
                        "description": "month",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "type": {
                        "title": "type",
                        "description": "some value from PlanTypeEnum",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    }
                },
                "type": "object",
                "xml": {
                    "name": "PlanPricing"
                }
            },
            "Profile": {
                "title": "Profile",
                "description": "Profile model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "user_id": {
                        "title": "user_id",
                        "description": "user_id",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "address": {
                        "title": "address",
                        "description": "address",
                        "type": "string",
                        "example": "This is an address"
                    },
                    "bio": {
                        "title": "bio",
                        "description": "bio",
                        "type": "string",
                        "example": "This is a bio"
                    },
                    "latitude": {
                        "title": "latitude",
                        "description": "latitude",
                        "type": "string",
                        "example": "123.456"
                    },
                    "longitude": {
                        "title": "longitude",
                        "description": "longitude",
                        "type": "string",
                        "example": "123.456"
                    },
                    "mobile_verify_at": {
                        "title": "mobile_verify_at",
                        "description": "mobile_verify_at",
                        "type": "string",
                        "example": "2022-04-06 08:14:40"
                    },
                    "email_verify_at": {
                        "title": "email_verify_at",
                        "description": "email_verify_at",
                        "type": "string",
                        "example": "2022-04-06 08:14:40"
                    },
                    "fcm_token": {
                        "title": "fcm_token",
                        "description": "fcm_token",
                        "type": "string",
                        "example": "fcm_token"
                    },
                    "last_login_at": {
                        "title": "last_login_at",
                        "description": "last_login_at",
                        "type": "string",
                        "example": "2022-04-06 08:14:40"
                    },
                    "google_id": {
                        "title": "google_id",
                        "description": "google_id",
                        "type": "string",
                        "example": "google_id"
                    },
                    "enable_notification": {
                        "title": "enable_notification",
                        "description": "enable_notification",
                        "type": "boolean",
                        "example": true
                    },
                    "enable_subscription": {
                        "title": "enable_subscription",
                        "description": "enable_subscription",
                        "type": "boolean",
                        "example": true
                    },
                    "test_period_usage": {
                        "title": "test_period_usage",
                        "description": "test_period_usage",
                        "type": "boolean",
                        "example": true
                    },
                    "extra_attributes": {
                        "title": "extra_attributes",
                        "description": "extra_attributes",
                        "type": "object"
                    },
                    "created_at": {
                        "title": "created_at",
                        "description": "created_at",
                        "type": "string",
                        "example": "2022-04-06 08:14:40"
                    },
                    "updated_at": {
                        "title": "updated_at",
                        "description": "updated_at",
                        "type": "string",
                        "example": "2022-04-06 08:14:40"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Profile"
                }
            },
            "Province": {
                "title": "Province",
                "description": "Province model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Province"
                }
            },
            "Report": {
                "title": "Report",
                "description": "Report model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Report"
                }
            },
            "ReportReason": {
                "title": "ReportReason",
                "description": "ReportReason model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    }
                },
                "type": "object",
                "xml": {
                    "name": "ReportReason"
                }
            },
            "Server": {
                "title": "Server",
                "description": "Server model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "uuid": {
                        "type": "string",
                        "readOnly": "true",
                        "example": "123e4567-e89b-12d3-a456-426614174000"
                    },
                    "user_id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "order_id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "website_url": {
                        "type": "string",
                        "example": "https://example.com"
                    },
                    "domain_name": {
                        "type": "string",
                        "example": "example"
                    },
                    "ip_address": {
                        "type": "string",
                        "example": "192.168.1.1"
                    },
                    "has_ssl": {
                        "type": "boolean",
                        "example": "true"
                    },
                    "has_backup": {
                        "type": "boolean",
                        "example": "true"
                    },
                    "backup_frequency": {
                        "type": "string",
                        "example": "daily"
                    },
                    "has_application": {
                        "type": "boolean",
                        "example": "true"
                    },
                    "has_website": {
                        "type": "boolean",
                        "example": "true"
                    },
                    "source_code_updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2021-09-01 00:00:00"
                    },
                    "application_updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2021-09-01 00:00:00"
                    },
                    "database_password": {
                        "type": "string",
                        "example": "password"
                    },
                    "ssh_password": {
                        "type": "string",
                        "example": "password"
                    },
                    "expired_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2021-09-01 00:00:00"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true"
                    },
                    "deleted_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true"
                    },
                    "user": {
                        "$ref": "#/components/schemas/User"
                    },
                    "order": {
                        "$ref": "#/components/schemas/Order"
                    },
                    "services": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Service"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Server"
                }
            },
            "Service": {
                "title": "Service",
                "description": "Service model",
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "id",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "uuid": {
                        "title": "uuid",
                        "description": "uuid",
                        "type": "string",
                        "example": "123e4567-e89b-12d3-a456-426614174000"
                    },
                    "key": {
                        "title": "key",
                        "description": "key",
                        "type": "string",
                        "example": "service"
                    },
                    "languages": {
                        "title": "languages",
                        "description": "languages",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "fa",
                            "en"
                        ]
                    },
                    "extra_attributes": {
                        "title": "extra_attributes",
                        "description": "extra_attributes",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "fa",
                            "en"
                        ]
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Service"
                }
            },
            "Setting": {
                "title": "Setting",
                "description": "Setting model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Setting"
                }
            },
            "Subscription": {
                "title": "Subscription",
                "description": "Subscription model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Subscription"
                }
            },
            "Ticket": {
                "title": "Ticket",
                "description": "Ticket model",
                "properties": {
                    "subject": {
                        "type": "string",
                        "example": "This is a ticket subject"
                    },
                    "description": {
                        "type": "string",
                        "example": "This is a ticket description"
                    },
                    "department": {
                        "type": "string",
                        "example": "contact"
                    },
                    "closed_by": {
                        "type": "string",
                        "example": "1"
                    },
                    "status": {
                        "type": "string",
                        "example": "open"
                    },
                    "priority": {
                        "type": "string",
                        "example": "low"
                    },
                    "ticket_number": {
                        "type": "string",
                        "example": "TICKET-202109-1"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2021-09-01 00:00:00"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2021-09-01 00:00:00"
                    },
                    "messages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Message"
                        },
                        "nullable": true
                    },
                    "user": {
                        "$ref": "#/components/schemas/User"
                    },
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "user_id": {
                        "type": "integer",
                        "example": "1"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Ticket"
                }
            },
            "Translation": {
                "title": "Translation",
                "description": "Translation model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Translation"
                }
            },
            "User": {
                "title": "User",
                "description": "User model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "title": "name",
                        "description": "name",
                        "type": "string",
                        "example": "John"
                    },
                    "family": {
                        "title": "family",
                        "description": "family",
                        "type": "string",
                        "example": "Doe"
                    },
                    "status": {
                        "title": "status",
                        "description": "status",
                        "type": "boolean",
                        "example": true
                    },
                    "mobile": {
                        "title": "mobile",
                        "description": "mobile",
                        "type": "string",
                        "example": "09123456789"
                    },
                    "email": {
                        "title": "email",
                        "description": "email",
                        "type": "string",
                        "format": "email",
                        "example": ""
                    },
                    "google_id": {
                        "title": "google_id",
                        "description": "google_id",
                        "type": "string",
                        "example": ""
                    }
                },
                "type": "object",
                "xml": {
                    "name": "User"
                }
            }
        },
        "securitySchemes": {
            "sanctum": {
                "type": "apiKey",
                "description": "Enter token in format (Bearer <token>)",
                "name": "Authorization",
                "in": "header"
            },
            "Accept-Language": {
                "type": "apiKey",
                "name": "Accept-Language",
                "in": "header",
                "default": "header"
            }
        }
    },
    "security": [
        {
            "Accept-Language": [],
            "sanctum": []
        }
    ]
}
